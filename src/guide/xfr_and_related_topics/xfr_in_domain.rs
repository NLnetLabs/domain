//! # How XFR and related functionality works in domain.

// Note: Diagrams were created using asciiflow.com.

//! The following diagrams illustrates which types in domain handle XFR and
//! related functionality and how they interact.
//! 
//! ### Component relationships
//! 
//! ```text
//!     ┌──────------┐                        
//!     │StreamServer│                        
//!     └────┬------─┴─────────┐              
//!          │TsigMiddlewareSvc│-----------+  
//!          └────┬────────────┴──────┐    :  
//!               │NotifyMiddlewareSvc│    :  
//!               └────┬──────────────┴─┐  :  
//!                 :  │XfrMiddlewareSvc│  :  
//!                 :  └────┬─────────┬─┘  :  
//!                 :    :  │MyService│    :  
//!                 :    :  └─────────┘    :  
//!                 +--+-+                 :  
//!                    :                   :  
//!                ┌───────┐               :  
//!                │Catalog│               :  
//!            ┌───┴┬───┬──┴─────┐         :  
//!            │Zone│   │KeyStore│         :  
//!            ├────┤   └────┬───┤         :  
//!            │Zone│        │Key│         :  
//!            ├────┤        ├───┤         :  
//!            │Zone│        │Key│         :  
//!            └────┘        ├───┤         :  
//!             ...          │Key│---------+  
//!                          └───┘            
//!                           ...             
//! ```
//! 
//! The diagram above shows:
//!   - A server that owns a stack of [`Service`] layers.
//!   - A [`Catalog`] that owns a set of [`Zone`]s and a [`KeyStore`].
//!   - A [`KeyStore`] that owns a set of [`Key`]s.
//!   - The [`TsigMiddlewareSvc`] refers to a [`Key`] in the [`KeyStore`].
//!   - The [`NotifyMiddlewareSvc`] and [`XfrMiddlewareSvc`] refer to the
//!     [`Catalog`].
//! 
//! 
//! ### Request/response handling
//! 
//! ```text
//!                If TSIG:               If NOTIFY:               If A/IXFR:            
//!     Request      Verify                 Control Access           Control Access       
//!          - - ►┌─────────────────┬───►┌───────────────────┬───►┌────────────────┬ - - ►
//!               │TsigMiddlewareSvc│    │NotifyMiddlewareSvc│    │XfrMiddlewareSvc│      
//!         ◄ - - ┴─────────────────┘◄───┴───────────────────┘◄───┴────────────────┘◄ - - 
//!     Response   Sign Response          Generate    │            Generate      │
//!                                       Response    │            Response      │
//!                                                   |                          │
//!                                        Lookup Zone│               Lookup Zone│
//!                                     Notify Catalog│              Lookup Diffs│
//!                                                   │     ┌───────┐   Walk Zone│
//!                                                   └────►│Catalog│◄───────────┘
//!                                                         └───────┘
//! ```
//! 
//! The diagram above shows:
//!   - Requests flowing from left to right.
//!   - Responses flowing from right to left.
//!   - Interactions with the [`Catalog`].
//!
//! Note: If an immediate response is generated by a middleware service, the request
//!       will NOT be propagated to the next service.
//! 
//! 
//! ### Catalog background activity
//! 
//! ```text
//! NOTIFY                          
//! ┌───────┬─────────►┌────────────────┐      
//! │Catalog│          │Secondary Server│      
//! └───────┘◄─────────┴────────────────┘      
//!          ACK                             
//!                                          
//!                                          
//!                                          
//!          XFR REQUEST                     
//! ┌───────┬─────────►┌──────────────┐      
//! │Catalog│          │Primary Server│      
//! └───────┘◄─────────┴──────────────┘      
//!          XFR RESPONSE                    
//! ```
//! 
//! [`Catalog`]: crate::zonecatalog::catalog::Catalog
//! [`Key`]: crate::tsig::Key
//! [`KeyStore`]: crate::tsig::KeyStore
//! [`NotifyMiddlewareSvc`]: crate::net::server::middleware::notify::NotifyMiddlewareSvc
//! [`Service`]: crate::net::server::Service
//! [`TsigMiddlewareSvc`]: crate::net::server::middleware::tsig::TsigMiddlewareSvc
//! [`XfrMiddlewareSvc`]: crate::net::server::middleware::xfr::XfrMiddlewareSvc
//! [`Zone`]: crate::zonetree::Zone